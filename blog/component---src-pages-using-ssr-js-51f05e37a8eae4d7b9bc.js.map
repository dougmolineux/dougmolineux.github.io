{"version":3,"file":"component---src-pages-using-ssr-js-51f05e37a8eae4d7b9bc.js","mappings":"mJA+HA,IA7HeA,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,OACEE,EAAAA,cAAA,OACEC,MAAO,CACLC,SAAU,SACVC,OAAQ,SACRC,QAAS,OACTC,WAAY,oBACZC,WAAY,MACZC,MAAO,UACPC,gBAAiB,YAGnBR,EAAAA,cAAA,aACG,soEAqFHA,EAAAA,cAAA,UACEC,MAAO,CACLQ,aAAc,oBACdC,cAAe,OACfC,aAAc,SAGhBX,EAAAA,cAAA,MAAIC,MAAO,CAAEE,OAAQ,EAAGI,MAAO,YAAa,uBAE9CP,EAAAA,cAAA,KAAGY,KAAK,OAAM,QACdZ,EAAAA,cAAA,YAAOD,GACPC,EAAAA,cAAA,UACEC,MAAO,CACLY,UAAW,OACXC,WAAY,OACZC,UAAW,oBACXC,UAAW,SACXT,MAAO,SAEV,MACI,IAAIU,MAAOC,cAAc,2CAE1B,C,+CC/EV,IAlCA,SAAYpB,GAAoC,IAADqB,EAAAC,EAAA,IAAlC,YAAEC,EAAW,MAAEC,EAAK,SAAEvB,GAAUD,EAC3C,MAAM,KAAEyB,IAASC,EAAAA,EAAAA,IAAe,YAc1BC,EAAkBJ,GAAeE,EAAKG,aAAaL,YACnDM,EAAgC,QAApBR,EAAGI,EAAKG,oBAAY,IAAAP,OAAA,EAAjBA,EAAmBG,MAExC,OACEtB,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQ2B,EAAe,GAAGL,OAAWK,IAAiBL,GACtDtB,EAAAA,cAAA,QAAM4B,KAAK,cAAcC,QAASJ,IAClCzB,EAAAA,cAAA,QAAM8B,SAAS,WAAWD,QAASP,IACnCtB,EAAAA,cAAA,QAAM8B,SAAS,iBAAiBD,QAASJ,IACzCzB,EAAAA,cAAA,QAAM8B,SAAS,UAAUD,QAAQ,YACjC7B,EAAAA,cAAA,QAAM4B,KAAK,eAAeC,QAAQ,YAClC7B,EAAAA,cAAA,QAAM4B,KAAK,kBAAkBC,SAA0B,QAAjBT,EAAAG,EAAKG,oBAAY,IAAAN,OAAA,EAAjBA,EAAmBW,SAAU,KACnE/B,EAAAA,cAAA,QAAM4B,KAAK,gBAAgBC,QAASP,IACpCtB,EAAAA,cAAA,QAAM4B,KAAK,sBAAsBC,QAASJ,IACzC1B,EAGP,C,6GCpCA,MA4BaiC,EAAOA,IAAMhC,EAAAA,cAACiC,EAAAA,EAAG,CAACX,MAAM,cAErC,UA9BiBxB,IAAqB,IAApB,WAAEoC,GAAYpC,EAC9B,OACEE,EAAAA,cAACmC,EAAAA,EAAM,KACLnC,EAAAA,cAAA,UAAI,gBACWA,EAAAA,cAAA,SAAG,yBAElBA,EAAAA,cAAA,SAAG,mHAE4C,IAC7CA,EAAAA,cAAA,YAAM,yCAA4C,KAEpDA,EAAAA,cAAA,OACEC,MAAO,CAAEmC,MAAO,QAASC,aAAc,wBACvCC,IAAI,eACJC,IAAKL,EAAWM,UAElBxC,EAAAA,cAAA,SAAG,kCAC+B,IAChCA,EAAAA,cAAA,KAAGY,KAAK,oFAAmF,6CAEvF,KAGNZ,EAAAA,cAACyC,EAAAA,GAAI,CAACC,GAAG,KAAI,2BACN,C","sources":["webpack://gatsby-starter-default/./src/components/layout.js","webpack://gatsby-starter-default/./src/components/seo.js","webpack://gatsby-starter-default/./src/pages/using-ssr.js"],"sourcesContent":["import * as React from \"react\";\n\nconst Layout = ({ children }) => {\n  return (\n    <div\n      style={{\n        maxWidth: \"1200px\", // Increased width to accommodate sidebar\n        margin: \"0 auto\",\n        padding: \"20px\",\n        fontFamily: \"Arial, sans-serif\",\n        lineHeight: \"1.6\",\n        color: \"#4A4A4A\", // Soft dark gray for text\n        backgroundColor: \"#F9F9F9\", // Light neutral background\n      }}\n    >\n      <style>\n        {`\n          h1, h2, h3, h4, h5, h6 {\n            margin-top: 1.5em;\n            margin-bottom: 0.5em;\n            color: #2C5D63; // Soft teal for headers\n          }\n\n          h1 {\n            font-size: 2.5rem;\n          }\n\n          h2 {\n            font-size: 2rem;\n          }\n\n          h3 {\n            font-size: 1.75rem;\n          }\n\n          p {\n            margin-bottom: 1.5em;\n          }\n\n          a {\n            color: #2C5D63; // Soft teal for links\n            text-decoration: none;\n          }\n\n          a:hover {\n            text-decoration: underline;\n            color: #3A7A7A; // Slightly darker teal on hover\n          }\n\n          ul, ol {\n            margin-bottom: 1.5em;\n            padding-left: 20px;\n          }\n\n          li {\n            margin-bottom: 0.5em;\n          }\n\n          code {\n            background: #E0F2F1; // Very light teal for code background\n            padding: 2px 5px;\n            border-radius: 3px;\n            font-family: \"Courier New\", monospace;\n            font-size: 0.9em;\n            color: #2C5D63; // Soft teal for code text\n          }\n\n          pre {\n            background: #E0F2F1; // Very light teal for code block background\n            padding: 15px;\n            border-radius: 5px;\n            overflow-x: auto;\n            margin-bottom: 1.5em;\n            color: #2C5D63; // Soft teal for code block text\n          }\n\n          blockquote {\n            border-left: 4px solid #A8DADC; // Light teal for blockquote border\n            padding-left: 15px;\n            margin: 1.5em 0;\n            color: #4A4A4A; // Soft dark gray for blockquote text\n            font-style: italic;\n          }\n\n          table {\n            width: \"100%\",\n            border-collapse: \"collapse\",\n            margin-bottom: \"1.5em\",\n          }\n\n          th, td {\n            padding: \"10px\",\n            border: \"1px solid #A8DADC\", // Light teal for table borders\n            text-align: \"left\",\n          }\n\n          th {\n            background: \"#E0F2F1\", // Very light teal for table header background\n          }\n        `}\n      </style>\n      <header\n        style={{\n          borderBottom: \"2px solid #A8DADC\", // Light teal for header border\n          paddingBottom: \"10px\",\n          marginBottom: \"20px\",\n        }}\n      >\n        <h1 style={{ margin: 0, color: \"#2C5D63\" }}>doug.molineux.blog</h1>\n      </header>\n      <a href=\"../\">Blog</a>\n      <main>{children}</main>\n      <footer\n        style={{\n          marginTop: \"40px\",\n          paddingTop: \"20px\",\n          borderTop: \"1px solid #A8DADC\", // Light teal for footer border\n          textAlign: \"center\",\n          color: \"#777\", // Soft gray for footer text\n        }}\n      >\n        Â© {new Date().getFullYear()} doug.molineux.blog. Built with Gatsby.\n      </footer>\n    </div>\n  );\n};\n\nexport default Layout;","/**\n * SEO component that queries for data with\n * Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.com/docs/how-to/querying-data/use-static-query/\n */\n\nimport * as React from \"react\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction Seo({ description, title, children }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n  const defaultTitle = site.siteMetadata?.title\n\n  return (\n    <>\n      <title>{defaultTitle ? `${title} | ${defaultTitle}` : title}</title>\n      <meta name=\"description\" content={metaDescription} />\n      <meta property=\"og:title\" content={title} />\n      <meta property=\"og:description\" content={metaDescription} />\n      <meta property=\"og:type\" content=\"website\" />\n      <meta name=\"twitter:card\" content=\"summary\" />\n      <meta name=\"twitter:creator\" content={site.siteMetadata?.author || ``} />\n      <meta name=\"twitter:title\" content={title} />\n      <meta name=\"twitter:description\" content={metaDescription} />\n      {children}\n    </>\n  )\n}\n\nexport default Seo\n","import * as React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport Seo from \"../components/seo\"\n\nconst UsingSSR = ({ serverData }) => {\n  return (\n    <Layout>\n      <h1>\n        This page is <b>rendered server-side</b>\n      </h1>\n      <p>\n        This page is rendered server side every time the page is requested.\n        Reload it to see a(nother) random photo from{\" \"}\n        <code>dog.ceo/api/breed/shiba/images/random</code>:\n      </p>\n      <img\n        style={{ width: \"320px\", borderRadius: \"var(--border-radius)\" }}\n        alt=\"A random dog\"\n        src={serverData.message}\n      />\n      <p>\n        To learn more, head over to our{\" \"}\n        <a href=\"https://www.gatsbyjs.com/docs/reference/rendering-options/server-side-rendering/\">\n          documentation about Server Side Rendering\n        </a>\n        .\n      </p>\n      <Link to=\"/\">Go back to the homepage</Link>\n    </Layout>\n  )\n}\n\nexport const Head = () => <Seo title=\"Using SSR\" />\n\nexport default UsingSSR\n\nexport async function getServerData() {\n  try {\n    const res = await fetch(`https://dog.ceo/api/breed/shiba/images/random`)\n    if (!res.ok) {\n      throw new Error(`Response failed`)\n    }\n    return {\n      props: await res.json(),\n    }\n  } catch (error) {\n    return {\n      status: 500,\n      headers: {},\n      props: {},\n    }\n  }\n}\n"],"names":["_ref","children","React","style","maxWidth","margin","padding","fontFamily","lineHeight","color","backgroundColor","borderBottom","paddingBottom","marginBottom","href","marginTop","paddingTop","borderTop","textAlign","Date","getFullYear","_site$siteMetadata","_site$siteMetadata2","description","title","site","useStaticQuery","metaDescription","siteMetadata","defaultTitle","name","content","property","author","Head","Seo","serverData","Layout","width","borderRadius","alt","src","message","Link","to"],"sourceRoot":""}